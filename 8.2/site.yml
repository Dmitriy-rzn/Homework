---
- name: Install Java
  hosts: all
  tasks:
    - name: Set facts for Java 17 vars
      set_fact:
        java_home: "/opt/jdk/{{ java_jdk_version }}"
      tags: java
    - name: Upload tar.gz Java remote URL
      get_url:
        url: "https://download.oracle.com/java/17/latest/jdk-{{ java_jdk_version }}_linux-x64_bin.tar.gz"
        dest: "/tmp/jdk-{{ java_jdk_version }}_linux-x64_bin.tar.gz"
        mode: 0755
        timeout: 60
        force: true
        validate_certs: false
      register: download_java_binaries
      until: download_java_binaries is succeeded
      tags: java
    - name: Ensure installation dir exists
      become: true
      file:
        state: directory
        path: "{{ java_home }}"
      tags: java
    - name: Extract java in the installation directory
      become: true
      unarchive:
        copy: false
        src: "/tmp/jdk-{{ java_jdk_version }}_linux-x64_bin.tar.gz"
        dest: "{{ java_home }}"
        extra_opts: [--strip-components=1]
        creates: "{{ java_home }}/bin/java"
      tags:
        - java
    - name: Export environment variables
      become: true
      template:
        src: jdk.sh.j2
        dest: /etc/profile.d/jdk.sh
      tags: java
- name: Install Elasticsearch
  hosts: elasticsearch
  tasks:
    - name: Upload tar.gz Elasticsearch from remote URL
      get_url:
        url: "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{{ elastic_version }}-linux-x86_64.tar.gz"
        dest: "/tmp/elasticsearch-{{ elastic_version }}-linux-x86_64.tar.gz"
        mode: 0755
        timeout: 60
        force: true
        validate_certs: false
      register: get_elastic
      until: get_elastic is succeeded
      tags: elastic
    - name: Create directrory for Elasticsearch
      become: true
      file:
        state: directory
        path: "{{ elastic_home }}"
      tags: elastic
    - name: Extract Elasticsearch in the installation directory
      become: true
      unarchive:
        copy: false
        src: "/tmp/elasticsearch-{{ elastic_version }}-linux-x86_64.tar.gz"
        dest: "{{ elastic_home }}"
        extra_opts: [--strip-components=1]
        creates: "{{ elastic_home }}/bin/elasticsearch"
      tags:
        - elastic
    - name: Set environment Elastic
      become: true
      template:
        src: templates/elk.sh.j2
        dest: /etc/profile.d/elk.sh
      tags: elastic
    - name: Recursively take ownership of a directory
      become: true
      file:
          path: "{{ elastic_home }}"
          state: directory
          recurse: yes
          owner: "{{ ansible_user }}"
          group: "{{ ansible_user }}"
    - name: Make Elasticsearch avalaible on any interface
      blockinfile:
          path: "{{ elastic_home }}/config/elasticsearch.yml"
          block: |
            transport.host: localhost
            transport.tcp.port: 9300
            http.port: 9200
            network.host: 0.0.0.0
- name: Install Kibana
  hosts: kibana
  tasks:
    - name: Upload .tar.gz file from remote URL
      get_url:
          url: "https://artifacts.elastic.co/downloads/kibana/kibana-{{ kibana_version }}-linux-x86_64.tar.gz"
          dest: "/tmp/kibana-{{ kibana_version }}-linux-x86_64.tar.gz"
          mode: 0755
          timeout: 60
          force: true
          validate_certs: false
      register: download_kibana_binaries
      until: download_kibana_binaries is succeeded
      tags: kibana
    - name: Ensure installation dir exists
      become: true
      file:
          state: directory
          path: "{{ kibana_home }}"
      tags: kibana
    - name: Extract kibana in the installation directory
      become: true
      unarchive:
          copy: false
          src: "/tmp/kibana-{{ kibana_version }}-linux-x86_64.tar.gz"
          dest: "{{ kibana_home }}"
          extra_opts: [--strip-components=1]
          creates: "{{ kibana_home }}/bin/kibana"
      tags:
          - skip_ansible_lint
          - kibana
    - name: Export environment variables
      become: true
      template:
          src: kibana.sh.j2
          dest: /etc/profile.d/kibana.sh
      tags: kibana
    - name: Recursively take ownership of a directory
      become: true      
      file:
          path: "{{ kibana_home }}"
          state: directory
          recurse: yes
          owner: "{{ ansible_user }}"
          group: "{{ ansible_user }}"
    - name: Make Kibana avalaible on any interface
      lineinfile:
          path: "{{ kibana_home }}/config/kibana.yml"
          line: 'server.host: "0.0.0.0"'
